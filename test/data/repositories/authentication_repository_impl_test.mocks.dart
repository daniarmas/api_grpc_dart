// Mocks generated by Mockito 5.0.15 from annotations
// in api_grpc_dart/test/data/repositories/authentication_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:api_grpc_dart/core/utils/json_web_token.dart' as _i9;
import 'package:api_grpc_dart/data/datasources/authorization_token_local_data_source.dart'
    as _i12;
import 'package:api_grpc_dart/data/datasources/banned_device_local_data_source.dart'
    as _i11;
import 'package:api_grpc_dart/data/datasources/banned_user_local_data_source.dart'
    as _i10;
import 'package:api_grpc_dart/data/datasources/device_local_data_source.dart'
    as _i8;
import 'package:api_grpc_dart/data/datasources/kubernetes_data_source.dart'
    as _i15;
import 'package:api_grpc_dart/data/datasources/refresh_token_local_data_source.dart'
    as _i16;
import 'package:api_grpc_dart/data/datasources/session_local_data_source.dart'
    as _i13;
import 'package:api_grpc_dart/data/datasources/user_local_data_source.dart'
    as _i7;
import 'package:api_grpc_dart/data/datasources/verification_code_local_data_source.dart'
    as _i3;
import 'package:api_grpc_dart/data/email/emailer.dart' as _i14;
import 'package:api_grpc_dart/protos/protos/main.pb.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:postgres/postgres.dart' as _i5;
import 'package:postgres_dao/postgres_dao.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeVerificationCode_0 extends _i1.Fake implements _i2.VerificationCode {
}

class _FakeUser_1 extends _i1.Fake implements _i2.User {}

class _FakeDevice_2 extends _i1.Fake implements _i2.Device {}

class _FakeBannedUser_3 extends _i1.Fake implements _i2.BannedUser {}

class _FakeBannedDevice_4 extends _i1.Fake implements _i2.BannedDevice {}

class _FakeAuthorizationToken_5 extends _i1.Fake
    implements _i2.AuthorizationToken {}

class _FakeRefreshToken_6 extends _i1.Fake implements _i2.RefreshToken {}

/// A class which mocks [VerificationCodeLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerificationCodeLocalDataSource extends _i1.Mock
    implements _i3.VerificationCodeLocalDataSource {
  MockVerificationCodeLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.VerificationCode> createVerificationCode(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#createVerificationCode, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue:
                  Future<_i2.VerificationCode>.value(_FakeVerificationCode_0()))
          as _i4.Future<_i2.VerificationCode>);
  @override
  _i4.Future<List<_i2.VerificationCode>> listVerificationCode(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#listVerificationCode, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<List<_i2.VerificationCode>>.value(
                  <_i2.VerificationCode>[]))
          as _i4.Future<List<_i2.VerificationCode>>);
  @override
  _i4.Future<_i2.VerificationCode?> getVerificationCode(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#getVerificationCode, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.VerificationCode?>.value())
          as _i4.Future<_i2.VerificationCode?>);
  @override
  _i4.Future<_i2.VerificationCode?> updateVerificationCode(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#updateVerificationCode, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.VerificationCode?>.value())
          as _i4.Future<_i2.VerificationCode?>);
  @override
  _i4.Future<bool> deleteVerificationCode(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteVerificationCode, [], {#context: context, #data: data}),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [UserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDataSource extends _i1.Mock
    implements _i7.UserLocalDataSource {
  MockUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.User> createUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
          Invocation.method(
              #createUser, [], {#context: context, #data: data, #paths: paths}),
          returnValue:
              Future<_i2.User>.value(_FakeUser_1())) as _i4.Future<_i2.User>);
  @override
  _i4.Future<List<_i2.User>> listUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#listUser, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<List<_i2.User>>.value(<_i2.User>[]))
          as _i4.Future<List<_i2.User>>);
  @override
  _i4.Future<List<_i2.User>> listUserInAliases(
          {_i5.PostgreSQLExecutionContext? context,
          List<String>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#listUserInAliases, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<List<_i2.User>>.value(<_i2.User>[]))
          as _i4.Future<List<_i2.User>>);
  @override
  _i4.Future<_i2.User?> getUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getUser, [], {#context: context, #data: data, #paths: paths}),
          returnValue: Future<_i2.User?>.value()) as _i4.Future<_i2.User?>);
  @override
  _i4.Future<_i2.User?> updateUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
          Invocation.method(
              #updateUser, [], {#context: context, #data: data, #paths: paths}),
          returnValue: Future<_i2.User?>.value()) as _i4.Future<_i2.User?>);
  @override
  _i4.Future<void> deleteUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteUser, [], {#context: context, #data: data}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DeviceLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceLocalDataSource extends _i1.Mock
    implements _i8.DeviceLocalDataSource {
  MockDeviceLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Device> createDevice(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#createDevice, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.Device>.value(_FakeDevice_2()))
          as _i4.Future<_i2.Device>);
  @override
  _i4.Future<List<_i2.Device>> listDevice(
          {_i5.PostgreSQLExecutionContext? context,
          List<_i6.Attribute>? paths,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
              Invocation.method(#listDevice, [],
                  {#context: context, #paths: paths, #data: data}),
              returnValue: Future<List<_i2.Device>>.value(<_i2.Device>[]))
          as _i4.Future<List<_i2.Device>>);
  @override
  _i4.Future<_i2.Device?> getDevice(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getDevice, [], {#context: context, #data: data, #paths: paths}),
          returnValue: Future<_i2.Device?>.value()) as _i4.Future<_i2.Device?>);
  @override
  _i4.Future<_i2.Device?> updateDevice(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          Map<String, dynamic>? where,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
          Invocation.method(#updateDevice, [],
              {#context: context, #data: data, #where: where, #paths: paths}),
          returnValue: Future<_i2.Device?>.value()) as _i4.Future<_i2.Device?>);
  @override
  _i4.Future<void> deleteDevice(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteDevice, [], {#context: context, #data: data}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [JsonWebToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonWebToken extends _i1.Mock implements _i9.JsonWebToken {
  MockJsonWebToken() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String generateAuthorizationToken({Map<String, dynamic>? payload}) =>
      (super.noSuchMethod(
          Invocation.method(
              #generateAuthorizationToken, [], {#payload: payload}),
          returnValue: '') as String);
  @override
  String generateRefreshToken({Map<String, dynamic>? payload}) =>
      (super.noSuchMethod(
          Invocation.method(#generateRefreshToken, [], {#payload: payload}),
          returnValue: '') as String);
  @override
  Map<String, dynamic> verify(String? token, String? tokenName) =>
      (super.noSuchMethod(Invocation.method(#verify, [token, tokenName]),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [BannedUserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBannedUserLocalDataSource extends _i1.Mock
    implements _i10.BannedUserLocalDataSource {
  MockBannedUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.BannedUser> createBannedUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<String>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#createBannedUser, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.BannedUser>.value(_FakeBannedUser_3()))
          as _i4.Future<_i2.BannedUser>);
  @override
  _i4.Future<List<_i2.BannedUser>> listBannedUser(
          {_i5.PostgreSQLExecutionContext? context,
          List<_i6.Attribute>? paths,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
              Invocation.method(#listBannedUser, [],
                  {#context: context, #paths: paths, #data: data}),
              returnValue:
                  Future<List<_i2.BannedUser>>.value(<_i2.BannedUser>[]))
          as _i4.Future<List<_i2.BannedUser>>);
  @override
  _i4.Future<_i2.BannedUser?> getBannedUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#getBannedUser, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.BannedUser?>.value())
          as _i4.Future<_i2.BannedUser?>);
  @override
  _i4.Future<void> deleteBannedUser(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteBannedUser, [], {#context: context, #data: data}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [BannedDeviceLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBannedDeviceLocalDataSource extends _i1.Mock
    implements _i11.BannedDeviceLocalDataSource {
  MockBannedDeviceLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.BannedDevice> createBannedDevice(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<String>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#createBannedDevice, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue:
                  Future<_i2.BannedDevice>.value(_FakeBannedDevice_4()))
          as _i4.Future<_i2.BannedDevice>);
  @override
  _i4.Future<List<_i2.BannedDevice>> listBannedDevice(
          {_i5.PostgreSQLExecutionContext? context,
          List<_i6.Attribute>? paths,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
              Invocation.method(#listBannedDevice, [],
                  {#context: context, #paths: paths, #data: data}),
              returnValue:
                  Future<List<_i2.BannedDevice>>.value(<_i2.BannedDevice>[]))
          as _i4.Future<List<_i2.BannedDevice>>);
  @override
  _i4.Future<_i2.BannedDevice?> getBannedDevice(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#getBannedDevice, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.BannedDevice?>.value())
          as _i4.Future<_i2.BannedDevice?>);
  @override
  _i4.Future<void> deleteBannedDevice(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteBannedDevice, [], {#context: context, #data: data}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [AuthorizationTokenLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthorizationTokenLocalDataSource extends _i1.Mock
    implements _i12.AuthorizationTokenLocalDataSource {
  MockAuthorizationTokenLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthorizationToken> createAuthorizationToken(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#createAuthorizationToken, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.AuthorizationToken>.value(
                  _FakeAuthorizationToken_5()))
          as _i4.Future<_i2.AuthorizationToken>);
  @override
  _i4.Future<List<_i2.AuthorizationToken>> listAuthorizationToken(
          {_i5.PostgreSQLExecutionContext? context,
          List<_i6.Attribute>? paths,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
              Invocation.method(#listAuthorizationToken, [],
                  {#context: context, #paths: paths, #data: data}),
              returnValue: Future<List<_i2.AuthorizationToken>>.value(
                  <_i2.AuthorizationToken>[]))
          as _i4.Future<List<_i2.AuthorizationToken>>);
  @override
  _i4.Future<_i2.AuthorizationToken?> getAuthorizationToken(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#getAuthorizationToken, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.AuthorizationToken?>.value())
          as _i4.Future<_i2.AuthorizationToken?>);
  @override
  _i4.Future<bool> deleteAuthorizationToken(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteAuthorizationToken, [], {#context: context, #data: data}),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SessionLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionLocalDataSource extends _i1.Mock
    implements _i13.SessionLocalDataSource {
  MockSessionLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Session>> listSession(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#listSession, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<List<_i2.Session>>.value(<_i2.Session>[]))
          as _i4.Future<List<_i2.Session>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Emailer].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmailer extends _i1.Mock implements _i14.Emailer {
  MockEmailer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> connect() =>
      (super.noSuchMethod(Invocation.method(#connect, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i4.Future<void> getConnection() =>
      (super.noSuchMethod(Invocation.method(#getConnection, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> sendMail(
          {String? body, String? recipient, String? subject}) =>
      (super.noSuchMethod(
          Invocation.method(#sendMail, [],
              {#body: body, #recipient: recipient, #subject: subject}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> sendVerificationCodeMail(
          {String? recipient,
          String? code,
          _i2.VerificationCodeType? verificationCodeType,
          String? ip,
          String? device,
          DateTime? time}) =>
      (super.noSuchMethod(
          Invocation.method(#sendVerificationCodeMail, [], {
            #recipient: recipient,
            #code: code,
            #verificationCodeType: verificationCodeType,
            #ip: ip,
            #device: device,
            #time: time
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> sendSignInMail(
          {String? recipient, String? ip, String? device, DateTime? time}) =>
      (super.noSuchMethod(
          Invocation.method(#sendSignInMail, [],
              {#recipient: recipient, #ip: ip, #device: device, #time: time}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> sendSignUpMail(
          {String? recipient, String? ip, String? device, DateTime? time}) =>
      (super.noSuchMethod(
          Invocation.method(#sendSignUpMail, [],
              {#recipient: recipient, #ip: ip, #device: device, #time: time}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [KubernetesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockKubernetesDataSource extends _i1.Mock
    implements _i15.KubernetesDataSource {
  MockKubernetesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<String>> listNodes() =>
      (super.noSuchMethod(Invocation.method(#listNodes, []),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i4.Future<List<String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RefreshTokenLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRefreshTokenLocalDataSource extends _i1.Mock
    implements _i16.RefreshTokenLocalDataSource {
  MockRefreshTokenLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.RefreshToken> createRefreshToken(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#createRefreshToken, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue:
                  Future<_i2.RefreshToken>.value(_FakeRefreshToken_6()))
          as _i4.Future<_i2.RefreshToken>);
  @override
  _i4.Future<List<_i2.RefreshToken>> listRefreshToken(
          {_i5.PostgreSQLExecutionContext? context,
          List<_i6.Attribute>? paths,
          Map<String, dynamic>? data}) =>
      (super.noSuchMethod(
              Invocation.method(#listRefreshToken, [],
                  {#context: context, #paths: paths, #data: data}),
              returnValue:
                  Future<List<_i2.RefreshToken>>.value(<_i2.RefreshToken>[]))
          as _i4.Future<List<_i2.RefreshToken>>);
  @override
  _i4.Future<_i2.RefreshToken?> getRefreshToken(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Attribute>? paths}) =>
      (super.noSuchMethod(
              Invocation.method(#getRefreshToken, [],
                  {#context: context, #data: data, #paths: paths}),
              returnValue: Future<_i2.RefreshToken?>.value())
          as _i4.Future<_i2.RefreshToken?>);
  @override
  _i4.Future<bool> deleteRefreshToken(
          {_i5.PostgreSQLExecutionContext? context,
          Map<String, dynamic>? data,
          List<_i6.Where>? where}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteRefreshToken, [],
              {#context: context, #data: data, #where: where}),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}
