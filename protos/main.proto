syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

service AuthenticationService {
  rpc CreateVerificationCode (CreateVerificationCodeRequest) returns (CreateVerificationCodeResponse) {}
  rpc ListVerificationCode (ListVerificationCodeRequest) returns (ListVerificationCodeResponse) {}
  rpc GetVerificationCode (GetVerificationCodeRequest) returns (GetVerificationCodeResponse) {}
  rpc UpdateVerificationCode (UpdateVerificationCodeRequest) returns (UpdateVerificationCodeResponse) {}
  rpc DeleteVerificationCode (DeleteVerificationCodeRequest) returns (google.protobuf.Empty) {}

  rpc SignIn (SignInRequest) returns (SignInResponse) {}
  rpc SignUp (SignUpRequest) returns (SignUpResponse) {}

  rpc CheckSession (CheckSessionRequest) returns (CheckSessionResponse) {}

  rpc UserExists (UserExistsRequest) returns (google.protobuf.Empty) {}
  rpc UserExistsStream (stream UserExistsStreamRequest) returns (stream UserExistsStreamResponse) {}
}

service BusinessService {
  rpc ListBusiness (ListBusinessRequest) returns (ListBusinessResponse) {}
  rpc GetBusiness (GetBusinessRequest) returns (GetBusinessResponse) {}
}

service ObjectStorageService {
  rpc GetPresignedPutObjectUserAvatar (GetPresignedPutUserAvatarRequest) returns (GetPresignedPutUserAvatarResponse) {}
}

service HostnameService {
  rpc hostname(HostnameRequest) returns (HostnameResponse) {}
}

service Health {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

// Request & Response Message

message ListBusinessRequest {
  google.protobuf.FieldMask fieldMask = 1;
}

message ListBusinessResponse {
  repeated Business businesses = 1;
}

message GetBusinessRequest {
  string id = 1;
  google.protobuf.FieldMask fieldMask = 2;
}

message GetBusinessResponse {
  Business business = 1;
}

message GetPresignedPutUserAvatarRequest {
  string objectName = 1;
}

message GetPresignedPutUserAvatarResponse {
  string objectUrl = 1;
}

message SignUpRequest {
  string email = 1;
  string alias = 2;
  string fullName = 3;
  string birthday = 4;
  string photo = 5;
  string code = 6;
}

message SignUpResponse {
  string refreshToken = 1;
  string authorizationToken = 2;
  User user = 3;
}

message UserExistsStreamRequest {
  string alias = 1;
}

message UserExistsStreamResponse {
  bool isValid = 1;
}

message UserExistsRequest {
  string email = 1;
}

message CheckSessionResponse {
  repeated string ipAddresses = 1;
}

message CheckSessionRequest {
  optional string refreshToken = 1;
  optional string authorizationToken = 2;
}

message CreateVerificationCodeRequest {
  string email = 1;
  VerificationCodeType type = 2;
  google.protobuf.FieldMask fieldMask = 3;
}

message CreateVerificationCodeResponse {
  VerificationCode verificationCode = 1;
}

message ListVerificationCodeRequest {
  google.protobuf.FieldMask fieldMask = 1;
}

message ListVerificationCodeResponse {
  repeated VerificationCode verificationCodes = 1;
}

message DeleteVerificationCodeRequest {
  string id = 1;
}

message GetVerificationCodeRequest {
  string id = 1;
  string code = 2;
  google.protobuf.FieldMask fieldMask = 5;
}

message GetVerificationCodeResponse {
  VerificationCode verificationCode = 1;
}

message UpdateVerificationCodeRequest {
  string id = 1;
  string code = 2;
  string email = 3;
  VerificationCodeType type = 4;
  string deviceId = 5;
  google.protobuf.FieldMask fieldMask = 6;
}

message UpdateVerificationCodeResponse {
  VerificationCode verificationCode = 1;
}

message SignInRequest {
  string email = 1;
  string code = 2;
  google.protobuf.FieldMask fieldMask = 3;
}

message SignInResponse {
  string refreshToken = 1;
  string authorizationToken = 2;
  User user = 3;
  // Business business = 4;
}

message HostnameRequest {
  
}

message HostnameResponse {
  string hostname = 1;
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}

// Entites Messages

message User {
  string id = 1;
  string fullName = 2; 
  string alias = 3;
  string photo = 4;
  string photoUrl = 5;
  repeated UserAddress userAddress = 6;
  string birthday = 7;
  string email = 8; 
  repeated UserPermission permissions = 9;
  string createTime = 10;
  string updateTime = 11;
}

message Business {
  string id = 1;
  string name = 2;
  string description = 3;
  string address = 4;
  string phone = 5;
  string email = 6;
  string photo = 7;
  string photoUrl = 8;
  bool isOpen = 9;
  double deliveryPrice = 10;
  Polygon polygon = 11;
  Point coordinates = 12;
  int32 leadDayTime = 13;
  int32 leadHoursTime = 14;
  int32 leadMinutesTime = 15;
  bool toPickUp = 16;
  bool homeDelivery = 17;
  string businessBrandFk = 18;
  string provinceFk = 19;
  string municipalityFk = 20;
}

message BannedUser {
  string id = 1;
  string description = 2;
  string userFk = 3;
  string email = 4;
  string moderatorAuthorizationTokenFk = 5;
  string createTime = 6;
  string updateTime = 7;
}

message BannedDevice {
  string id = 1;
  string description = 2;
  string deviceFk = 3;
  string deviceId = 4;
  string moderatorAuthorizationTokenFk = 5;
  string createTime = 6;
  string updateTime = 7;
}

message AuthorizationToken {
  string id = 1;
  string authorizationToken = 2;
  string refreshTokenFk = 3;
  string deviceFk = 4;
  string userFk = 5;
  bool valid = 6;
  AppType app = 7;
  string appVersion = 8;
  string createTime = 9;
  string updateTime = 10;
}

message RefreshToken {
  string id = 1;
  string refreshToken = 2;
  string userFk = 3;
  bool valid = 4;
  string expirationTime = 5;
  string createTime = 6;
  string updateTime = 7;
}

message Device {
  string id = 1;
  PlatformType platform = 2;
  string systemVersion = 3;
  string deviceId = 4;
  string firebaseCloudMessagingId = 5;
  string model = 6;
  string createTime = 7;
  string updateTime = 8;
}

message UserAddress {
  enum UserAddressType {
  UNSPECIFIED = 0;
  HOUSE = 1;
  APARTAMENT = 2;
  }
  string id = 1;
  string tag = 2;
  UserAddressType residenceType = 3;
  string buildingNumber = 4;
  string houseNumber = 5;
  Point coordinates = 6;
  string description = 7;
  string userFk = 8;
  string provinceFk = 9;
  string municipalityFk = 10;
  string createTime = 11;
  string updateTime = 12;
}

message UserPermission {
  string id = 1;
  string name = 2;
  string permissionFk = 3;
  string userFk = 4;
  string businessFk = 5;
  string createTime = 6;
  string updateTime = 7;
}

message Polygon {
  repeated double coordinates = 1;
}

message VerificationCode {
  string id = 1;
  string code = 2;
  string email = 3;
  VerificationCodeType type = 4;
  string deviceId = 5;
  string createTime = 6;
  string updateTime = 7;
}

// Enums

enum VerificationCodeType {
  VERIFICATION_CODE_TYPE_UNSPECIFIED = 0;
  SIGN_IN = 1;
  SIGN_UP = 2;
  CHANGE_USER_EMAIL = 3;
}

enum PlatformType {
  PLATFORM_TYPE_UNSPECIFIED = 0;
  IOS = 1;
  ANDROID = 2;
}

enum AppType  {
  APP_TYPE_UNSPECIFIED = 0;
  APP = 1;
  BUSINESS_APP = 2;
}

// 'Sign_In', 'Sign_Up', 'Change_User_Email'

// message BusinessSchedule {
//   string id = 1;
//   google.protobuf.Timestamp opening_time_sunday = 2;
//   google.protobuf.Timestamp closing_time_sunday = 3;
//   google.protobuf.Timestamp opening_time_monday = 4;
//   google.protobuf.Timestamp closing_time_monday = 5;
//   google.protobuf.Timestamp opening_time_tuesday = 6;
//   google.protobuf.Timestamp closing_time_tuesday = 7;
//   google.protobuf.Timestamp opening_time_wednesday = 8;
//   google.protobuf.Timestamp closing_time_wednesday = 9;
//   google.protobuf.Timestamp opening_time_thursday = 10;
//   google.protobuf.Timestamp closing_time_thursday = 11;
//   google.protobuf.Timestamp opening_time_friday = 12;
//   google.protobuf.Timestamp closing_time_friday = 13;
//   google.protobuf.Timestamp opening_time_saturday = 14;
//   google.protobuf.Timestamp closing_time_saturday = 15;
//   google.protobuf.Timestamp opening_time_delivery_sunday = 16;
//   google.protobuf.Timestamp closing_time_delivery_sunday = 17;
//   google.protobuf.Timestamp opening_time_delivery_monday = 18;
//   google.protobuf.Timestamp closing_time_delivery_monday = 19;
//   google.protobuf.Timestamp opening_time_delivery_tuesday = 20;
//   google.protobuf.Timestamp closing_time_deliveryTuesday = 21;
//   google.protobuf.Timestamp opening_time_delivery_wednesday = 22;
//   google.protobuf.Timestamp closing_time_delivery_wednesday = 23;
//   google.protobuf.Timestamp opening_time_delivery_thursday = 24;
//   google.protobuf.Timestamp closing_time_delivery_thursday = 25;
//   google.protobuf.Timestamp opening_time_delivery_friday = 26;
//   google.protobuf.Timestamp closing_time_delivery_friday = 27;
//   google.protobuf.Timestamp opening_time_delivery_saturday = 28;
//   google.protobuf.Timestamp closing_time_delivery_saturday = 29;
// }

message Point {
  double latitude = 1;
  double longitude = 2;
}