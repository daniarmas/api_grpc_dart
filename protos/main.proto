syntax = "proto3";

// import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
// import "google/protobuf/any.proto";

service BusinessService {
  rpc ListBusiness (ListBusinessRequest) returns (ListBusinessResponse) {}
}

service AuthenticationService {
  rpc CreateVerificationCode (CreateVerificationCodeRequest) returns (CreateVerificationCodeResponse) {}
  rpc ListVerificationCode (ListVerificationCodeRequest) returns (ListVerificationCodeResponse) {}
  rpc GetVerificationCode (GetVerificationCodeRequest) returns (GetVerificationCodeResponse) {}
  rpc DeleteVerificationCode (DeleteVerificationCodeRequest) returns (google.protobuf.Empty) {}

  rpc CreateSignIn (CreateSignInRequest) returns (CreateSignInResponse) {}
}


service HostnameService {
  rpc hostname(HostnameRequest) returns (HostnameResponse) {}
}

message CreateSignInRequest {
  string email = 1;
  string platform = 2;
  string systemVersion = 3;
  string appVersion = 4;
  string app = 5;
  string deviceId = 6;
  string model = 7;
  string firebaseCloudMessagingId = 8;
  string code = 9;
}

message CreateSignInResponse {
  string refreshToken = 1;
  string authorizationToken = 2;
  User user = 3;
  Business business = 4;
}

message HostnameRequest {
  
}

message HostnameResponse {
  string hostname = 1;
}

service Health {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
  // rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}

message ListBusinessRequest {
  optional string category_fk = 1;
  repeated string not_ids = 2;
  optional bool this_month = 3;
  LatLng coordinates = 4;
}

message ListBusinessResponse {
  repeated Business business = 1;
}

message Business {
  string id = 1;
  string name = 2;
  string description = 3;
  // BusinessCategory category = 4;
  string address = 5;
  string phone = 6;
  string email = 7;
  string photo = 8;
  string photo_url = 9;
  LatLng coordinates = 10;
  repeated Polygon polygon = 11;
  double distance = 12;
  // bool to_pick_up = 11;
  // bool home_delivery = 12;
  // BusinessSchedule schedule = 13;
  // int32 lead_day_time = 14;
  // int32 lead_hours_time = 15;
  // int32 lead_minutes_time = 16;
  // bool is_open = 17;
  // double valuation = 20;
  // double delivery_price = 21;
  // google.protobuf.Timestamp created_at = 22;
  // create_time
  // google.protobuf.Timestamp updated_at = 23;
}

message User {
  string id = 1;
  string fullName = 2; 
  string photo = 3;
  string photoUrl = 4;
  repeated UserAddress userAddress = 5;
  string birthday = 6;
  string email = 7; 
  repeated UserPermission permissions = 8;
  string createTime = 9;
  string updateTime = 10;
}

message BannedUser {
  string id = 1;
  string description = 2;
  string userFk = 3;
  string moderatorAuthorizationTokenFk = 4;
}

message BannedDevice {
  string id = 1;
  string description = 2;
  string deviceFk = 3;
  string moderatorAuthorizationTokenFk = 4;
}

message AuthorizationToken {
  enum AppType {
    UNSPECIFIED = 0;
    APP = 1;
    BUSINESS_APP = 2;
  }
  string id = 1;
  string authorizationToken = 2;
  string refreshTokenFk = 3;
  string deviceFk = 4;
  string userFk = 5;
  bool valid = 6;
  AppType app = 7;
  string appVersion = 8;
}

message RefreshToken {
  string id = 1;
  string refreshToken = 2;
  string userFk = 3;
  bool valid = 4;
  string expirationTime = 5;
}

message Device {
  enum Platform {
    UNSPECIFIED = 0;
    IOS = 1;
    ANDROID = 2;
  }
  string id = 1;
  Platform platform = 2;
  string systemVersion = 3;
  string deviceId = 4;
  string firebaseCloudMessagingId = 5;
  string model = 6;
}

message UserAddress {
  enum UserAddressType {
  UNSPECIFIED = 0;
  HOUSE = 1;
  APARTAMENT = 2;
  }
  string id = 1;
  string tag = 2;
  UserAddressType residenceType = 3;
  string buildingNumber = 4;
  string houseNumber = 5;
  LatLng coordinates = 6;
  string description = 7;
  string userFk = 8;
  string provinceFk = 9;
  string municipalityFk = 10;
}

message UserPermission {
  string id = 1;
  string name = 2;
  string permissionFk = 3;
  string userFk = 4;
  string businessFk = 5;
}

message Polygon {
  repeated double coordinates = 1;
}

message CreateVerificationCodeRequest {
    string deviceId = 1;
    string email = 2;
    VerificationCodeType type = 3;
}

message CreateVerificationCodeResponse {
    VerificationCode verificationCode = 1;
}

message ListVerificationCodeRequest {
    
}

message ListVerificationCodeResponse {
  message Data {
    repeated VerificationCode verificationCode = 1;
  }
  Data data = 1;
  Error error = 2;
}

message DeleteVerificationCodeRequest {
    string id = 1;
}

message GetVerificationCodeRequest {
    string id = 1;
}

message GetVerificationCodeResponse {
    VerificationCode verificationCode = 1;
}

message VerificationCode {
  string id = 1;
  string code = 2;
  VerificationCodeType type = 3;
  string deviceId = 4;
}

enum VerificationCodeType {
  UNSPECIFIED = 0;
  SIGN_IN = 1;
  SIGN_UP = 2;
  CHANGE_USER_EMAIL = 3;
}

// 'Sign_In', 'Sign_Up', 'Change_User_Email'

// message BusinessSchedule {
//   string id = 1;
//   google.protobuf.Timestamp opening_time_sunday = 2;
//   google.protobuf.Timestamp closing_time_sunday = 3;
//   google.protobuf.Timestamp opening_time_monday = 4;
//   google.protobuf.Timestamp closing_time_monday = 5;
//   google.protobuf.Timestamp opening_time_tuesday = 6;
//   google.protobuf.Timestamp closing_time_tuesday = 7;
//   google.protobuf.Timestamp opening_time_wednesday = 8;
//   google.protobuf.Timestamp closing_time_wednesday = 9;
//   google.protobuf.Timestamp opening_time_thursday = 10;
//   google.protobuf.Timestamp closing_time_thursday = 11;
//   google.protobuf.Timestamp opening_time_friday = 12;
//   google.protobuf.Timestamp closing_time_friday = 13;
//   google.protobuf.Timestamp opening_time_saturday = 14;
//   google.protobuf.Timestamp closing_time_saturday = 15;
//   google.protobuf.Timestamp opening_time_delivery_sunday = 16;
//   google.protobuf.Timestamp closing_time_delivery_sunday = 17;
//   google.protobuf.Timestamp opening_time_delivery_monday = 18;
//   google.protobuf.Timestamp closing_time_delivery_monday = 19;
//   google.protobuf.Timestamp opening_time_delivery_tuesday = 20;
//   google.protobuf.Timestamp closing_time_deliveryTuesday = 21;
//   google.protobuf.Timestamp opening_time_delivery_wednesday = 22;
//   google.protobuf.Timestamp closing_time_delivery_wednesday = 23;
//   google.protobuf.Timestamp opening_time_delivery_thursday = 24;
//   google.protobuf.Timestamp closing_time_delivery_thursday = 25;
//   google.protobuf.Timestamp opening_time_delivery_friday = 26;
//   google.protobuf.Timestamp closing_time_delivery_friday = 27;
//   google.protobuf.Timestamp opening_time_delivery_saturday = 28;
//   google.protobuf.Timestamp closing_time_delivery_saturday = 29;
// }

message LatLng {
  // The latitude in degrees. It must be in the range [-90.0, +90.0].
  double latitude = 1;

  // The longitude in degrees. It must be in the range [-180.0, +180.0].
  double longitude = 2;
}

message RepeatedBusiness {
  repeated Business business = 1;
}

message BusinessCategory {
  string id = 1;
  string name = 2;
}

message Error {
    int32 code = 1;
    string codeName = 2;
    string message = 3;
  }

// The error format v2 for Google JSON REST APIs.
//
// NOTE: This schema is not used for other wire protocols.
// message Error {
//   // This message has the same semantics as `google.rpc.Status`. It uses HTTP
//   // status code instead of gRPC status code. It has an extra field `status`
//   // for backward compatibility with Google API Client Libraries.
//   message Status {
//     // The HTTP status code that corresponds to `google.rpc.Status.code`.
//     int32 code = 1;
//     // This corresponds to `google.rpc.Status.message`.
//     string message = 2;
//     // This is the enum version for `google.rpc.Status.code`.
//     google.rpc.Code status = 4;
//     // This corresponds to `google.rpc.Status.details`.
//     repeated google.protobuf.Any details = 5;
//   }
//   // The actual error payload. The nested message structure is for backward
//   // compatibility with Google API client libraries. It also makes the error
//   // more readable to developers.
//   Status error = 1;
// }
